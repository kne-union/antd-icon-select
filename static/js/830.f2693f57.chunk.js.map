{"version":3,"file":"static/js/830.f2693f57.chunk.js","mappings":"0fAAA,MCSMA,EAAWC,OAAOC,KAAKC,GAC1BC,OAAOC,GAAQ,6BAA6BC,KAAKD,IACjDE,IAAIF,IACH,MAAMG,EAAgBL,EAAME,GAC5B,MAAO,CAAEI,MAAOC,IAAAA,cAACF,EAAa,MAAKG,MAAON,KAGxCO,EAAkBC,GAEpBH,IAAAA,cAACI,EAAAA,OAAMC,EAAA,GACDF,EAAK,CACTG,SAAS,EACTC,WAAY,CACVC,KAAMC,EACNC,MAAO,CACLF,KAAMC,IAGVE,QAASrB,EACTsB,YAAU,EACVC,aAAcA,CAACC,EAAOC,MACN,MAANA,OAAM,EAANA,EAAQd,QAAS,IAAIe,cAAcC,SAASH,EAAME,kBAK5DE,GAAaC,EAAAA,EAAAA,wBAAuB,CACxCC,cAAe,QACfC,SAAU,CACR,QDtCW,CACbC,YAAa,6BCsCX,QCvCW,CACbA,YAAa,2BDkCIH,CAMhBhB,IACD,MAAM,cAAEoB,IAAkBC,EAAAA,EAAAA,YACpB,YAAEC,GAAgBC,EAAAA,MAExB,OADeD,EAAYlC,OAAOoC,OAAO,CAAC,EAAG,CAAEL,YAAaC,EAAc,CAAEK,GAAI,eAAiB,CAAE7B,MAAOI,EAAMJ,OAAS,MAASI,GAC3H0B,CAAO3B,KAGhBgB,EAAWY,MAAQ5B,E,iBE7Cb6B,EAAcC,IAAwB,IAAvB,KAAEC,GAAgBD,EAAP7B,E,2IAAK+B,CAAAF,EAAAG,GACnC,MAAMC,EAAO3C,EAAMwC,GACnB,OAAKG,EAGEpC,IAAAA,cAACoC,EAASjC,GAFR,K","sources":["../../src/locale/zh-CN.js","../../src/IconSelect.js","../../src/locale/en-US.js","../../src/IconDisplay.js"],"sourcesContent":["const locale = {\n  placeholder: '请选择{label}'\n};\n\nexport default locale;\n","import React from 'react';\nimport { Select } from 'antd';\nimport { hooks } from '@kne/react-form-antd';\nimport * as icons from '@ant-design/icons';\nimport style from './style.module.scss';\nimport { createWithIntlProvider, useIntl } from '@kne/react-intl';\nimport zhCN from './locale/zh-CN';\nimport enUS from './locale/en-US';\n\nconst iconList = Object.keys(icons)\n  .filter(name => /(Outlined|Filled|TwoTone)$/.test(name))\n  .map(name => {\n    const IconComponent = icons[name];\n    return { label: <IconComponent />, value: name };\n  });\n\nconst IconSelectField = props => {\n  return (\n    <Select\n      {...props}\n      virtual={false}\n      classNames={{\n        root: style['icon-select'],\n        popup: {\n          root: style['icon-select-popup']\n        }\n      }}\n      options={iconList}\n      showSearch\n      filterOption={(input, option) => {\n        return (option?.value || '').toLowerCase().includes(input.toLowerCase());\n      }}\n    />\n  );\n};\nconst IconSelect = createWithIntlProvider({\n  defaultLocale: 'zh-CN',\n  messages: {\n    'zh-CN': zhCN,\n    'en-US': enUS\n  }\n})(props => {\n  const { formatMessage } = useIntl();\n  const { useOnChange } = hooks;\n  const render = useOnChange(Object.assign({}, { placeholder: formatMessage({ id: 'placeholder' }, { label: props.label || '' }) }, props));\n  return render(IconSelectField);\n});\n\nIconSelect.Field = IconSelectField;\n\nexport default IconSelect;\n","const locale = {\n  placeholder: 'Please Select {label}'\n};\n\nexport default locale;\n","import React from 'react';\nimport * as icons from '@ant-design/icons';\n\nconst IconDisplay = ({ type, ...props }) => {\n  const Icon = icons[type];\n  if (!Icon) {\n    return null;\n  }\n  return <Icon {...props} />;\n};\n\nexport default IconDisplay;\n"],"names":["iconList","Object","keys","icons","filter","name","test","map","IconComponent","label","React","value","IconSelectField","props","Select","_extends","virtual","classNames","root","style","popup","options","showSearch","filterOption","input","option","toLowerCase","includes","IconSelect","createWithIntlProvider","defaultLocale","messages","placeholder","formatMessage","useIntl","useOnChange","hooks","assign","id","render","Field","IconDisplay","_ref","type","_objectWithoutPropertiesLoose","_excluded","Icon"],"sourceRoot":""}