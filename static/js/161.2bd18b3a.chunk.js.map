{"version":3,"file":"static/js/161.2bd18b3a.chunk.js","mappings":"+PAOAA,OAAOC,WAAaC,oBAOpB,MAAMC,EAAW,CACbC,IAAK,yBAA0BC,IAAK,iEAGlCC,EAAuB,IACtBH,EAAUI,OAAQ,kBAAmBC,eAAgB,UAG5DC,EAAAA,EAAAA,QAAmB,CACfC,QAAS,CACLC,QAASL,EAAsB,kBAAmBA,EAAsB,sBAAuB,IACxFH,EAAUI,OAAQ,sBAAuBC,eAAgB,SAC7D,mBAEC,IACGL,EAAUI,OAAQ,mBAAoBC,eAAgBN,YAK9D,MAAMU,EAAO,MAChB,MAAMC,EAAWC,IAAAA,OAAa,CAC1BC,eAAgB,WACZ,OAAO,CACX,IAGJ,OAAQC,GACAA,EAAOC,eAAe,WAAsC,oBAAlBD,EAAOE,OAC1CC,QAAQC,QAAQJ,EAAOE,OAAOG,IAAKL,EAAQ,CAAC,aAAaM,KAAMC,IAAI,CACtEA,KAAM,CACFC,KAAM,EAAGD,WAEbE,MAAOC,IACPC,EAAAA,QAAQC,MAAMF,EAAIC,SAAW,wCACtB,CAACJ,KAAM,CAACC,KAAM,IAAKK,IAAKH,EAAIC,YAGpCd,EAASG,EAEvB,EApBmB,IAuBpBc,EAAAA,EAAAA,QAAY,CACRlB,OACAmB,SAASC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,MAAO,IACPC,MAAO,CAACC,SAAU,WAAYC,KAAM,MAAOC,QAAS,OAAQC,UAAW,sBACtFX,MAAO,KACPY,OAAOR,EAAAA,EAAAA,KAACS,EAAAA,MAAK,IACbC,kBAAoBC,IAChB,MAAM,KAACpB,GAAQoB,EAIf,OAHAA,EAASpB,KAAO,CACZC,KAAoB,IAAdD,EAAKC,KAAa,IAAMD,EAAKC,KAAMK,IAAKN,EAAKM,IAAKe,QAASrB,EAAKA,MAEnEoB,K,oEC/Df,MAAME,EAAgBC,IAAAA,cAuBtB,EArBYC,IAAuC,IAAtC,OAAEC,EAAM,WAAEC,KAAeC,GAAOH,EAC3C,OACIf,EAAAA,EAAAA,KAACmB,EAAAA,WAAU,CAAAC,UACTpB,EAAAA,EAAAA,KAACa,EAAa,IACNK,EACJG,MAAO,CACL,CACEC,IAAK,aACLC,KAAM,IACNC,MAAO,iBAGXR,OAAQA,EACRC,WAAYA,EACZQ,OAAQA,EAAAA,QACRC,UAAW,CAAEC,KAAM,WCjBlBC,EAAAA,WAAoBC,SAASC,eAAe,SAMpDC,QACD/B,EAAAA,EAAAA,KAACgC,IAAAA,WAAgB,CAAAZ,UACfpB,EAAAA,EAAAA,KAACiC,EAAG,CAACjB,OAAQ,CAAEpC,KAAK,GAAGqC,WANV,CACjBiB,aAAc,e,wECLhB,MAuOA,EAvOqB,CACjBC,KAAM,mBACNC,QAAS,o9FA6BTC,YAAa,wKACbC,YAAa,wBACbC,IAAK,4rIAmJLC,QAAS,CACLC,QAAQ,EACRC,UAAW,yBACXvC,MAAO,yGAKPwC,KAAM,CAAC,CACXnB,MAAO,mDACPa,YAAa,mDACb7C,KAAM,isBA2BNoD,MAAO,CAAC,CACRT,KAAM,kBACNG,YAAa,oCACbO,gBAAiB,2DACjBC,UAAW,GACb,CACEX,KAAM,eACNG,YAAa,qBACbQ,UAAW,O","sources":["preset.js","App.js","bootstrap.js","../../README.md"],"sourcesContent":["import React from 'react';\nimport {preset as fetchPreset} from '@kne/react-fetch';\nimport {Spin, Empty, message} from 'antd';\nimport axios from 'axios';\nimport {preset as remoteLoaderPreset} from '@kne/remote-loader';\nimport omit from 'lodash/omit';\n\nwindow.PUBLIC_URL = process.env.PUBLIC_URL;\n\n// url: 'https://registry.npmmirror.com',\n// tpl: '{{url}}/@kne-components%2f{{remote}}/{{version}}/files/build',\n\n// url: 'https://cdn.jsdelivr.net', tpl: '{{url}}/npm/@kne-components/{{remote}}@{{version}}/build'\n\nconst registry = {\n    url: \"https://uc.fatalent.cn\", tpl: \"{{url}}/packages/@kne-components/{{remote}}/{{version}}/build\"\n};\n\nconst componentsCoreRemote = {\n    ...registry, remote: 'components-core', defaultVersion: '0.3.0'\n};\n\nremoteLoaderPreset({\n    remotes: {\n        default: componentsCoreRemote, 'components-core': componentsCoreRemote, 'components-iconfont': {\n            ...registry, remote: 'components-iconfont', defaultVersion: '0.1.8'\n        }, 'antd-icon-select': process.env.NODE_ENV === 'development' ? {\n            remote: 'antd-icon-select', url: '/', tpl: '{{url}}'\n        } : {\n            ...registry, remote: 'antd-icon-select', defaultVersion: process.env.DEFAULT_VERSION\n        }\n    }\n});\n\nexport const ajax = (() => {\n    const instance = axios.create({\n        validateStatus: function () {\n            return true;\n        }\n    });\n\n    return (params) => {\n        if (params.hasOwnProperty('loader') && typeof params.loader === 'function') {\n            return Promise.resolve(params.loader(omit(params, ['loader']))).then((data) => ({\n                data: {\n                    code: 0, data\n                }\n            })).catch((err) => {\n                message.error(err.message || '请求发生错误');\n                return {data: {code: 500, msg: err.message}};\n            });\n        }\n        return instance(params);\n    };\n})();\n\n\nfetchPreset({\n    ajax,\n    loading: <Spin delay={500}\n                   style={{position: 'absolute', left: '50%', padding: '10px', transform: 'translateX(-50%)'}}/>,\n    error: null,\n    empty: <Empty/>,\n    transformResponse: (response) => {\n        const {data} = response;\n        response.data = {\n            code: data.code === 0 ? 200 : data.code, msg: data.msg, results: data.data\n        };\n        return response;\n    }\n});\n","import { HashRouter } from \"react-router-dom\";\nimport createEntry from \"@kne/modules-dev/dist/create-entry\";\nimport \"@kne/modules-dev/dist/create-entry.css\";\nimport readme from \"readme\";\n\nconst ExampleRoutes = createEntry.ExampleRoutes;\n\nconst App = ({ preset, themeToken, ...props }) => {\n  return (\n      <HashRouter>\n        <ExampleRoutes\n            {...props}\n            paths={[\n              {\n                key: \"components\",\n                path: \"/\",\n                title: \"首页\",\n              },\n            ]}\n            preset={preset}\n            themeToken={themeToken}\n            readme={readme}\n            pageProps={{ menu: null }}\n        />\n      </HashRouter>\n  );\n};\n\nexport default App;\n","import { ajax } from \"./preset\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nconst themeToken = {\n  colorPrimary: \"#4F185A\",\n};\n\nroot.render(\n    <React.StrictMode>\n      <App preset={{ ajax }} themeToken={themeToken} />\n    </React.StrictMode>\n);\n","import * as component_1 from '@kne/current-lib_antd-icon-select';\nimport '@kne/current-lib_antd-icon-select/dist/index.css';\nimport * as component_3 from '@kne/remote-loader';\nconst readmeConfig = {\n    name: `antd-icon-select`,\n    summary: `<p>antd-icon-select 是一个基于 Ant Design 的图标选择器组件，提供了便捷的方式来选择和显示 Ant Design 图标库中的图标。该组件封装了 Ant Design 的 Select 组件，并集成了所有可用的图标，使开发者能够轻松地在表单中实现图标的选择功能。</p>\n<h3>功能特点</h3>\n<ul>\n<li><strong>丰富的图标库</strong>：集成了 Ant Design 图标库中的所有图标，包括 Outlined、Filled 和 TwoTone 三种风格</li>\n<li><strong>搜索过滤</strong>：支持按图标名称进行搜索和过滤</li>\n<li><strong>国际化支持</strong>：内置中文和英文两种语言的支持</li>\n<li><strong>表单集成</strong>：可以作为表单控件使用，与 Ant Design Form 组件无缝集成</li>\n<li><strong>自定义样式</strong>：使用 CSS Modules 进行样式隔离，支持自定义样式</li>\n</ul>\n<h3>使用场景</h3>\n<ul>\n<li>需要在表单中选择图标的场景</li>\n<li>菜单配置、权限管理等需要图标选择的功能</li>\n<li>自定义组件库中需要图标选择的场景</li>\n<li>后台管理系统中的图标配置功能</li>\n</ul>\n<h3>组件结构</h3>\n<ol>\n<li><strong>IconSelect.Field</strong>：基于 antd 的 Select 组件封装，提供图标选择功能</li>\n<li><strong>IconSelect</strong>：对 IconSelect.Field 进行了封装可以直接在@kne/react-form及以此基础的Form中使用</li>\n<li><strong>IconDisplay</strong>：用于显示选定的图标</li>\n</ol>\n<p>这组件可以单独使用，也可以配合使用，满足不同的使用场景。</p>\n<h3>国际化支持</h3>\n<p>组件内置了中文和英文两种语言的支持，会根据系统环境自动选择合适的语言。目前支持的语言包括：</p>\n<ul>\n<li>中文 (zh-CN)</li>\n<li>英文 (en-US)</li>\n</ul>`,\n    description: `用来选择@ant-design/icons中的一个Icon，也可以将选择结果转化为一个图标`,\n    packageName: `@kne/antd-icon-select`,\n    api: `<h3>API 文档</h3>\n<p>本文档详细描述了 <code>@kne/antd-icon-select</code> 包中提供的组件 API。</p>\n<h3>导出组件</h3>\n<table>\n<thead>\n<tr>\n<th>组件名称</th>\n<th>导出类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IconSelect</td>\n<td>默认导出</td>\n<td>图标选择器组件，用于选择 Ant Design 图标，需要在@kne/react-form中进行使用</td>\n</tr>\n<tr>\n<td>IconSelect.Field</td>\n<td>-</td>\n<td>图标选择器组件，用于选择 Ant Design 图标</td>\n</tr>\n<tr>\n<td>IconDisplay</td>\n<td>命名导出</td>\n<td>图标显示组件，用于显示选定的图标</td>\n</tr>\n</tbody>\n</table>\n<h3>IconSelect 组件</h3>\n<p>IconSelect 组件是基于 Ant Design 的 Select 组件封装的图标选择器，提供了选择 Ant Design 图标的功能。</p>\n<h4>属性</h4>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td>string</td>\n<td>-</td>\n<td>当前选中的图标名称</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>function(value)</td>\n<td>-</td>\n<td>选择图标时的回调函数</td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>string</td>\n<td>'请选择图标' / 'Select Icon'</td>\n<td>选择框默认文本</td>\n</tr>\n<tr>\n<td>allowClear</td>\n<td>boolean</td>\n<td>true</td>\n<td>是否允许清除选中的图标</td>\n</tr>\n<tr>\n<td>showSearch</td>\n<td>boolean</td>\n<td>true</td>\n<td>是否显示搜索框</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>boolean</td>\n<td>false</td>\n<td>是否禁用选择器</td>\n</tr>\n<tr>\n<td>style</td>\n<td>object</td>\n<td>-</td>\n<td>选择器的样式</td>\n</tr>\n<tr>\n<td>className</td>\n<td>string</td>\n<td>-</td>\n<td>选择器的类名</td>\n</tr>\n</tbody>\n</table>\n<p>除上述属性外，IconSelect 组件还支持 Ant Design Select\n组件的所有属性，详情可参考 <a href=\"https://ant.design/components/select-cn/\">Ant Design Select 文档</a>。</p>\n<h3>IconDisplay 组件</h3>\n<p>IconDisplay 组件用于显示选定的图标，接收图标类型名称并渲染对应的图标。</p>\n<h4>属性</h4>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>-</td>\n<td>图标类型名称，必须是 Ant Design 图标库中的有效图标名称</td>\n</tr>\n<tr>\n<td>style</td>\n<td>object</td>\n<td>-</td>\n<td>图标的样式，如 fontSize、color 等</td>\n</tr>\n<tr>\n<td>className</td>\n<td>string</td>\n<td>-</td>\n<td>图标的类名</td>\n</tr>\n<tr>\n<td>spin</td>\n<td>boolean</td>\n<td>false</td>\n<td>是否使图标旋转</td>\n</tr>\n<tr>\n<td>rotate</td>\n<td>number</td>\n<td>-</td>\n<td>图标旋转角度</td>\n</tr>\n<tr>\n<td>twoToneColor</td>\n<td>string</td>\n<td>-</td>\n<td>仅适用于双色图标，设置双色图标的主要颜色</td>\n</tr>\n</tbody>\n</table>\n<p>除上述属性外，IconDisplay 组件还支持 Ant Design\n图标组件的所有属性，详情可参考 <a href=\"https://ant.design/components/icon-cn/\">Ant Design 图标文档</a>。</p>`,\n    example: {\n        isFull: false,\n        className: `antd_icon_select_56345`,\n        style: `.antd_icon_select_56345 .ant-card {\n  border-color: black;\n  text-align: center;\n  width: 200px;\n}`,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: IconSelect, IconDisplay } = _AntdIconSelect;\nconst { createWithRemoteLoader } = remoteLoader;\n\nconst Display = createWithRemoteLoader({\n  modules: ['components-core:FormInfo']\n})(({ remoteModules }) => {\n  const [FormInfo] = remoteModules;\n  const { formData } = FormInfo.useFormContext();\n  return <IconDisplay type={formData?.icon} />;\n});\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['components-core:FormInfo']\n})(({ remoteModules }) => {\n  const [FormInfo] = remoteModules;\n  const { Form } = FormInfo;\n  return (\n    <Form>\n      <Display />\n      <IconSelect name=\"icon\" label=\"Icon\" />\n    </Form>\n  );\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_AntdIconSelect\",\n    packageName: \"@kne/current-lib_antd-icon-select\",\n    importStatement: \"import * as _AntdIconSelect from \\\"@kne/antd-icon-select\\\"\",\n    component: component_1\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_3\n}]\n}]\n    }\n};\nexport default readmeConfig;\n"],"names":["window","PUBLIC_URL","process","registry","url","tpl","componentsCoreRemote","remote","defaultVersion","remoteLoaderPreset","remotes","default","ajax","instance","axios","validateStatus","params","hasOwnProperty","loader","Promise","resolve","omit","then","data","code","catch","err","message","error","msg","fetchPreset","loading","_jsx","Spin","delay","style","position","left","padding","transform","empty","Empty","transformResponse","response","results","ExampleRoutes","createEntry","_ref","preset","themeToken","props","HashRouter","children","paths","key","path","title","readme","pageProps","menu","ReactDOM","document","getElementById","render","React","App","colorPrimary","name","summary","description","packageName","api","example","isFull","className","list","scope","importStatement","component"],"sourceRoot":""}